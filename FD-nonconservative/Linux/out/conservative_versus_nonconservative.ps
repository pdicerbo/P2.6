%!PS-Adobe-2.0
%%Title: conservative_versus_nonconservative.ps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Feb  7 22:35:20 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (conservative_versus_nonconservative.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Olindo Zanotti,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb  7 22:35:20 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
742 280 M
63 0 V
6241 0 R
-63 0 V
658 280 M
( 0) Rshow
1.000 UL
LTb
742 1045 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 0.1) Rshow
1.000 UL
LTb
742 1811 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 0.2) Rshow
1.000 UL
LTb
742 2576 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 0.3) Rshow
1.000 UL
LTb
742 3341 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 0.4) Rshow
1.000 UL
LTb
742 4107 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 0.5) Rshow
1.000 UL
LTb
742 4872 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 0.6) Rshow
1.000 UL
LTb
742 280 M
0 63 V
0 4529 R
0 -63 V
742 140 M
( 0) Cshow
1.000 UL
LTb
2003 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 0.2) Cshow
1.000 UL
LTb
3264 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 0.4) Cshow
1.000 UL
LTb
4524 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 0.6) Cshow
1.000 UL
LTb
5785 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 0.8) Cshow
1.000 UL
LTb
7046 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
742 4872 N
742 280 L
6304 0 V
0 4592 V
-6304 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LTb
6395 4739 M
("./non_conservative.dat" u 1:2) Rshow
LT0
6479 4739 M
399 0 V
742 742 M
32 0 V
31 31 V
32 0 V
32 32 V
31 0 V
32 33 V
32 0 V
31 33 V
32 0 V
32 35 V
31 0 V
32 35 V
32 0 V
31 36 V
32 0 V
32 37 V
32 0 V
31 37 V
32 0 V
32 38 V
31 0 V
32 38 V
32 0 V
31 39 V
32 0 V
32 40 V
31 0 V
32 40 V
32 0 V
31 40 V
32 0 V
32 41 V
31 0 V
32 41 V
32 0 V
31 42 V
32 0 V
32 42 V
31 0 V
32 43 V
32 0 V
31 43 V
32 0 V
32 43 V
32 0 V
31 43 V
32 0 V
32 44 V
31 0 V
32 44 V
32 0 V
31 44 V
32 0 V
32 44 V
31 0 V
32 45 V
32 0 V
31 45 V
32 0 V
32 45 V
31 0 V
32 45 V
32 0 V
31 46 V
32 0 V
32 45 V
31 0 V
32 46 V
32 0 V
31 46 V
32 0 V
32 46 V
32 0 V
31 47 V
32 0 V
32 46 V
31 0 V
32 47 V
32 0 V
31 46 V
32 0 V
32 47 V
31 0 V
32 47 V
32 0 V
31 47 V
32 0 V
32 47 V
31 0 V
32 47 V
32 0 V
31 47 V
32 0 V
32 48 V
31 0 V
32 47 V
32 0 V
31 48 V
32 0 V
32 47 V
32 0 V
31 48 V
stroke 3973 2915 M
32 0 V
32 47 V
31 0 V
32 48 V
32 0 V
31 48 V
32 0 V
32 48 V
31 0 V
32 48 V
32 0 V
31 48 V
32 0 V
32 48 V
31 0 V
32 48 V
32 0 V
31 48 V
32 0 V
32 48 V
31 0 V
32 49 V
32 0 V
31 48 V
32 0 V
32 48 V
32 0 V
31 48 V
32 0 V
32 48 V
31 0 V
32 48 V
32 0 V
31 48 V
32 0 V
32 47 V
31 0 V
32 47 V
32 0 V
31 46 V
32 0 V
32 44 V
31 0 V
32 42 V
32 0 V
31 37 V
32 0 V
32 29 V
31 0 V
32 18 V
32 0 V
31 -2 V
32 0 V
32 -33 V
32 0 V
31 -82 V
32 0 V
32 -151 V
31 0 V
32 -246 V
32 0 V
31 -352 V
32 0 V
32 -449 V
31 0 V
32 -499 V
32 0 V
31 -482 V
32 0 V
32 -407 V
31 0 V
32 -305 V
32 0 V
31 -208 V
32 0 V
32 -129 V
31 0 V
32 -73 V
32 0 V
31 -36 V
32 0 V
32 -12 V
32 0 V
31 3 V
32 0 V
32 12 V
31 0 V
32 19 V
32 0 V
31 22 V
32 0 V
32 25 V
31 0 V
32 27 V
32 0 V
31 29 V
32 0 V
742 742 Pls
774 742 Pls
805 773 Pls
837 773 Pls
869 805 Pls
900 805 Pls
932 838 Pls
964 838 Pls
995 871 Pls
1027 871 Pls
1059 906 Pls
1090 906 Pls
1122 941 Pls
1154 941 Pls
1185 977 Pls
1217 977 Pls
1249 1014 Pls
1281 1014 Pls
1312 1051 Pls
1344 1051 Pls
1376 1089 Pls
1407 1089 Pls
1439 1127 Pls
1471 1127 Pls
1502 1166 Pls
1534 1166 Pls
1566 1206 Pls
1597 1206 Pls
1629 1246 Pls
1661 1246 Pls
1692 1286 Pls
1724 1286 Pls
1756 1327 Pls
1787 1327 Pls
1819 1368 Pls
1851 1368 Pls
1882 1410 Pls
1914 1410 Pls
1946 1452 Pls
1977 1452 Pls
2009 1495 Pls
2041 1495 Pls
2072 1538 Pls
2104 1538 Pls
2136 1581 Pls
2168 1581 Pls
2199 1624 Pls
2231 1624 Pls
2263 1668 Pls
2294 1668 Pls
2326 1712 Pls
2358 1712 Pls
2389 1756 Pls
2421 1756 Pls
2453 1800 Pls
2484 1800 Pls
2516 1845 Pls
2548 1845 Pls
2579 1890 Pls
2611 1890 Pls
2643 1935 Pls
2674 1935 Pls
2706 1980 Pls
2738 1980 Pls
2769 2026 Pls
2801 2026 Pls
2833 2071 Pls
2864 2071 Pls
2896 2117 Pls
2928 2117 Pls
2959 2163 Pls
2991 2163 Pls
3023 2209 Pls
3055 2209 Pls
3086 2256 Pls
3118 2256 Pls
3150 2302 Pls
3181 2302 Pls
3213 2349 Pls
3245 2349 Pls
3276 2395 Pls
3308 2395 Pls
3340 2442 Pls
3371 2442 Pls
3403 2489 Pls
3435 2489 Pls
3466 2536 Pls
3498 2536 Pls
3530 2583 Pls
3561 2583 Pls
3593 2630 Pls
3625 2630 Pls
3656 2677 Pls
3688 2677 Pls
3720 2725 Pls
3751 2725 Pls
3783 2772 Pls
3815 2772 Pls
3846 2820 Pls
3878 2820 Pls
3910 2867 Pls
3942 2867 Pls
3973 2915 Pls
4005 2915 Pls
4037 2962 Pls
4068 2962 Pls
4100 3010 Pls
4132 3010 Pls
4163 3058 Pls
4195 3058 Pls
4227 3106 Pls
4258 3106 Pls
4290 3154 Pls
4322 3154 Pls
4353 3202 Pls
4385 3202 Pls
4417 3250 Pls
4448 3250 Pls
4480 3298 Pls
4512 3298 Pls
4543 3346 Pls
4575 3346 Pls
4607 3394 Pls
4638 3394 Pls
4670 3443 Pls
4702 3443 Pls
4733 3491 Pls
4765 3491 Pls
4797 3539 Pls
4829 3539 Pls
4860 3587 Pls
4892 3587 Pls
4924 3635 Pls
4955 3635 Pls
4987 3683 Pls
5019 3683 Pls
5050 3731 Pls
5082 3731 Pls
5114 3778 Pls
5145 3778 Pls
5177 3825 Pls
5209 3825 Pls
5240 3871 Pls
5272 3871 Pls
5304 3915 Pls
5335 3915 Pls
5367 3957 Pls
5399 3957 Pls
5430 3994 Pls
5462 3994 Pls
5494 4023 Pls
5525 4023 Pls
5557 4041 Pls
5589 4041 Pls
5620 4039 Pls
5652 4039 Pls
5684 4006 Pls
5716 4006 Pls
5747 3924 Pls
5779 3924 Pls
5811 3773 Pls
5842 3773 Pls
5874 3527 Pls
5906 3527 Pls
5937 3175 Pls
5969 3175 Pls
6001 2726 Pls
6032 2726 Pls
6064 2227 Pls
6096 2227 Pls
6127 1745 Pls
6159 1745 Pls
6191 1338 Pls
6222 1338 Pls
6254 1033 Pls
6286 1033 Pls
6317 825 Pls
6349 825 Pls
6381 696 Pls
6412 696 Pls
6444 623 Pls
6476 623 Pls
6507 587 Pls
6539 587 Pls
6571 575 Pls
6603 575 Pls
6634 578 Pls
6666 578 Pls
6698 590 Pls
6729 590 Pls
6761 609 Pls
6793 609 Pls
6824 631 Pls
6856 631 Pls
6888 656 Pls
6919 656 Pls
6951 683 Pls
6983 683 Pls
7014 712 Pls
7046 712 Pls
6678 4739 Pls
1.000 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
LTb
6395 4599 M
("./conservative.dat" u 1:2) Rshow
LT1
6479 4599 M
399 0 V
742 339 M
32 30 V
31 27 V
32 28 V
32 26 V
31 27 V
32 26 V
32 26 V
31 26 V
32 26 V
32 25 V
31 26 V
32 25 V
32 26 V
31 25 V
32 25 V
32 26 V
32 25 V
31 25 V
32 26 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 26 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
32 24 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 24 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 24 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
32 25 V
31 25 V
32 24 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 24 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 24 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 24 V
32 25 V
32 25 V
32 25 V
31 25 V
stroke 3973 2904 M
32 25 V
32 25 V
31 24 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 24 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 24 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 24 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 24 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 24 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 24 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
32 25 V
31 24 V
32 25 V
32 25 V
31 25 V
32 25 V
32 25 V
31 25 V
32 25 V
32 24 V
31 25 V
32 23 V
32 14 V
31 -47 V
32 -421 V
32 -1702 V
6222 537 L
32 -256 V
32 -1 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 29 V
742 339 Crs
774 369 Crs
805 396 Crs
837 424 Crs
869 450 Crs
900 477 Crs
932 503 Crs
964 529 Crs
995 555 Crs
1027 581 Crs
1059 606 Crs
1090 632 Crs
1122 657 Crs
1154 683 Crs
1185 708 Crs
1217 733 Crs
1249 759 Crs
1281 784 Crs
1312 809 Crs
1344 835 Crs
1376 860 Crs
1407 885 Crs
1439 910 Crs
1471 935 Crs
1502 960 Crs
1534 985 Crs
1566 1011 Crs
1597 1036 Crs
1629 1061 Crs
1661 1086 Crs
1692 1111 Crs
1724 1136 Crs
1756 1161 Crs
1787 1186 Crs
1819 1211 Crs
1851 1236 Crs
1882 1261 Crs
1914 1286 Crs
1946 1311 Crs
1977 1336 Crs
2009 1361 Crs
2041 1386 Crs
2072 1411 Crs
2104 1436 Crs
2136 1461 Crs
2168 1485 Crs
2199 1510 Crs
2231 1535 Crs
2263 1560 Crs
2294 1585 Crs
2326 1610 Crs
2358 1635 Crs
2389 1660 Crs
2421 1685 Crs
2453 1710 Crs
2484 1735 Crs
2516 1760 Crs
2548 1785 Crs
2579 1809 Crs
2611 1834 Crs
2643 1859 Crs
2674 1884 Crs
2706 1909 Crs
2738 1934 Crs
2769 1959 Crs
2801 1984 Crs
2833 2009 Crs
2864 2033 Crs
2896 2058 Crs
2928 2083 Crs
2959 2108 Crs
2991 2133 Crs
3023 2158 Crs
3055 2183 Crs
3086 2208 Crs
3118 2232 Crs
3150 2257 Crs
3181 2282 Crs
3213 2307 Crs
3245 2332 Crs
3276 2357 Crs
3308 2382 Crs
3340 2407 Crs
3371 2431 Crs
3403 2456 Crs
3435 2481 Crs
3466 2506 Crs
3498 2531 Crs
3530 2556 Crs
3561 2581 Crs
3593 2605 Crs
3625 2630 Crs
3656 2655 Crs
3688 2680 Crs
3720 2705 Crs
3751 2730 Crs
3783 2755 Crs
3815 2780 Crs
3846 2804 Crs
3878 2829 Crs
3910 2854 Crs
3942 2879 Crs
3973 2904 Crs
4005 2929 Crs
4037 2954 Crs
4068 2978 Crs
4100 3003 Crs
4132 3028 Crs
4163 3053 Crs
4195 3078 Crs
4227 3103 Crs
4258 3128 Crs
4290 3152 Crs
4322 3177 Crs
4353 3202 Crs
4385 3227 Crs
4417 3252 Crs
4448 3277 Crs
4480 3302 Crs
4512 3327 Crs
4543 3351 Crs
4575 3376 Crs
4607 3401 Crs
4638 3426 Crs
4670 3451 Crs
4702 3476 Crs
4733 3501 Crs
4765 3525 Crs
4797 3550 Crs
4829 3575 Crs
4860 3600 Crs
4892 3625 Crs
4924 3650 Crs
4955 3675 Crs
4987 3700 Crs
5019 3724 Crs
5050 3749 Crs
5082 3774 Crs
5114 3799 Crs
5145 3824 Crs
5177 3849 Crs
5209 3874 Crs
5240 3898 Crs
5272 3923 Crs
5304 3948 Crs
5335 3973 Crs
5367 3998 Crs
5399 4023 Crs
5430 4048 Crs
5462 4073 Crs
5494 4097 Crs
5525 4122 Crs
5557 4147 Crs
5589 4172 Crs
5620 4197 Crs
5652 4222 Crs
5684 4247 Crs
5716 4272 Crs
5747 4296 Crs
5779 4321 Crs
5811 4346 Crs
5842 4371 Crs
5874 4396 Crs
5906 4421 Crs
5937 4446 Crs
5969 4471 Crs
6001 4495 Crs
6032 4520 Crs
6064 4543 Crs
6096 4557 Crs
6127 4510 Crs
6159 4089 Crs
6191 2387 Crs
6222 537 Crs
6254 281 Crs
6286 280 Crs
6317 280 Crs
6349 280 Crs
6381 280 Crs
6412 280 Crs
6444 280 Crs
6476 280 Crs
6507 280 Crs
6539 280 Crs
6571 280 Crs
6603 280 Crs
6634 280 Crs
6666 280 Crs
6698 280 Crs
6729 280 Crs
6761 280 Crs
6793 280 Crs
6824 280 Crs
6856 280 Crs
6888 280 Crs
6919 280 Crs
6951 280 Crs
6983 280 Crs
7014 280 Crs
7046 309 Crs
6678 4599 Crs
1.000 UL
LTb
742 4872 N
742 280 L
6304 0 V
0 4592 V
-6304 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
